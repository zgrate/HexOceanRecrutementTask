version: "3"

networks:
  internal: {}

services:

  db:
    image: postgres
    restart: always
    env_file:
      - ./envs/.env-db
    networks:
      - internal


  django_image_api:
    build:
      context: .
    depends_on:
      - db
    networks:
      - internal
    ports:
      - "8000:8000"
    env_file:
      - ./envs/.env-backend
    command: sh -c "python manage.py runserver 0.0.0.0:8000"
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.cleanup-cache.schedule: "@every 30m"
      ofelia.job-exec.cleanup-cache.command: 'sh -c "python manage.py cleantempcache'
      ofelia.job-exec.cleanup-images.schedule: "@daily"
      ofelia.job-exec.cleanup-images.command: 'sh -c "python manage.py cleanimages'
      ofelia.job-exec.cleanup-expired.schedule: "@daily"
      ofelia.job-exec.cleanup-expired.command: 'sh -c "python manage.py cleanexpired'



  cleanup_worker:
    image: mcuadros/ofelia:latest
    depends_on:
      - django_image_api
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro